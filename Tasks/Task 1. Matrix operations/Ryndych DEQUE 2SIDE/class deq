#include "stdafx.h"
#include <iostream>
#include "stdlib.h"
#include <windows.h>
using namespace std;


class dekInfo
{
	struct dek {
		int value;
		struct dek *prev;
		struct dek *nxt;

	};
	
public:
	struct dek *head;
	struct dek *tail ;
	int size;
	dekInfo (){
		this->head=NULL;
		this->tail=NULL;
		this->size=0;

	};

	void lPush(){
		dek *tmp =  (dek*) malloc(sizeof(dek));
		tmp->prev = NULL;
		tmp->nxt = NULL;
		this->size++;
		if (this->size == 1) {
			this->head = this->tail = tmp;

		}
		else {
			tmp->prev = this->head;
			this->head->nxt = tmp;
			this->head = tmp;
		}
		cout << "\n print value \n";
		cin >> tmp->value;
	}
	void RPush() {
		dek *tmp = (dek*)malloc(sizeof(dek));
		tmp->prev = NULL;
		tmp->nxt = NULL;
		this->size++;
		if (this->size == 1) {
			this->head = this->tail = tmp;

		}
		else {
			tmp->nxt = this->tail;
			this->tail->prev = tmp;
			this->tail = tmp;
		}
		cout << "\n print value \n";
		cin >> tmp->value;
	}
	void lPop() {
		this->head = this->head->prev;
		//free(this->head->nxt);
		this->head->nxt = NULL;
	}
	void RPop() {
		this->tail = this->tail->nxt;
		//free(this->tail->prev);
		this->tail->prev = NULL;
	}
	void printDek() {
		cout << "\n";
		while (this->head != NULL) {
			cout << this->head->value << " ";
			this->head = this->head->prev;
		}
		cout << "\n";
		system("pause");
	}
};
int main()
{
	dekInfo *dequeInfo=new dekInfo();
	int caseD;
	bool close = true;
	while (close) {
		cout << "choose operation \n 1)insert el. left \n 2)insert el. right \n 3)delete el. left \n 4)delete el. right \n 5)output deque \n 6)close \n";
		cin >> caseD;
		switch (caseD)
		{
		case 1: dequeInfo->lPush();
			break;
			case 2: dequeInfo->RPush();
			break;
			case 3:dequeInfo->lPop();
			break;
			case 4:dequeInfo->RPop();
			break;
			case 5: dequeInfo->printDek();
			break;
			case 6: close = false;
			break;
		}
	}

	return 0;
}
